<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Introduction</title>
<link rel="stylesheet" href="udtdoc.css" type="text/css" />
</head>

<body>
<h1><font color="#000080">Installation Guide</font></h1>

<p>The UDT library is distributed with source code, example applications, and documentation. Currently the source code can be compiled on both Linux and Windows system.</p>

<p>Here is the content of the distribution:</p>

<p><tt class="note1">./src: UDT source code</tt><br>
   <tt class="note1">./app: Example applications</tt><br>
   <tt class="note1">./doc: UDT documentation</tt><br>
   <tt class="note1">./win: Visual C++ project files for Windows version of UDT</tt></p>

<p>The library is in the original source code format without any installation tools, so installation is simply a make command. To make the C++ source code on different platform, the user 
needs to explicitly tell <i>make</i> the current operating system and hardware architecture with the "-e" option (except for Windows).</p>
<p>The available operating system options are: LINUX, BSD, and OSX. <br> The available options for hardware architecture are: IA32, IA64, POWERPC, and AMD64.</p>

<p>The command is in the format:</p>

<p>make -e os=XXX arch=YYY</p>

</p>where XXX and YYY are one of the options above. Note that it is case sensitive. There is a default value for Linux on the IA32 architecture, so if UDT is compiled on it, simply use 
make.</p>

</p>On Windows, use the Visual Studio .Net project files at ./win directory. It requires Visual C++ 7.0 or above to compile. If other Windows compilers are used, you may need to create 
your own Makefile or project files.</p>

</p>After a successful make, you can begin to use the UDT library. The (only) header file udt.h and the library libudt.a (depending on the target system, libudt.so, libudt.dylib, and udt.dll 
may be available) are located in ./src directory.</p>

</p>Proper environment configuration should be set up before using UDT library. For example, if using libudt.so, the library path environment variable must be updated as:</p>

</p>export LD_LIBRARY_PATH=<location of libudt.so>:$LD_LIBRARY_PATH</p>

<p>On Windows, copy udt.dll to proper directory.</p>

<p><b>Note:</b></p>

<p>1. By default, UDT uses the non-busy-waiting data sending in order to reduce CPU usage. You may turn off the -DNO_BUSY_WAITING option in ./src/Makefile, which may lead to better 
throughput but higher CPU usage.</p>

<p>2. If you need to configure congestion control algorithms, please uncomment the -DCUSTOM_CC compile option in ./src/Makefile. When this option is enabled, -DNO_BUSY_WAITIING is always 
disabled.</p>

<p>&nbsp;</p>
</body>
</html>
